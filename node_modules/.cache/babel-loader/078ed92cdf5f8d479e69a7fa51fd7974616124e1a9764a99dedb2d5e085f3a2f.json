{"ast":null,"code":"import _objectSpread from\"C:/Users/Karyos/Desktop/Tenzies-main/Tenzies-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Karyos/Desktop/Tenzies-main/Tenzies-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Navbar from'./Navbar';import'./main.css';import{nanoid}from'nanoid';import Card from'./Card';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(){var _useState=useState(CardNumbers()),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),game=_useState4[0],setGame=_useState4[1];useEffect(function(){var allTrue=count.every(function(element){return element.isTrue;});var firstValue=count[0].value;var allValue=count.every(function(element){return element.value===firstValue;});if(allTrue&&allValue){setGame(true);alert('You Won');}else{setGame(false);}},[count]);function CardNumbers(){var bosDizzi=[];for(var i=0;i<10;i++){bosDizzi.push({id:nanoid(),isTrue:false,value:Math.ceil(Math.random()*6)});}return bosDizzi;}var GeneratorClick=function GeneratorClick(){setCount(function(pre){return pre.map(function(element){return element.isTrue?element:{id:nanoid(),isTrue:false,value:Math.ceil(Math.random()*6)};});});};var HadleClick=function HadleClick(id){setCount(function(pre){return pre.map(function(element){return element.id===id?_objectSpread(_objectSpread({},element),{},{isTrue:!element.isTrue}):element;});});};var ResetGame=function ResetGame(){setCount(function(pre){return pre.map(function(element){return{id:nanoid(),isTrue:false,value:Math.ceil(Math.random()*6)};});});};var card=count.map(function(element){return/*#__PURE__*/_jsx(Card,{value:element.value,id:element.id,isTrue:element.isTrue,handleClick:function handleClick(){return HadleClick(element.id);}},element.id);});return/*#__PURE__*/_jsx(\"div\",{className:\"Main-div\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ekran\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"Cards-div\",children:card}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return game?ResetGame():GeneratorClick();},className:\"main-btn\",children:game?'reset ':'roll'})]})});};export default Main;","map":{"version":3,"names":["React","useState","Navbar","nanoid","Card","useEffect","jsx","_jsx","jsxs","_jsxs","Main","_useState","CardNumbers","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","game","setGame","allTrue","every","element","isTrue","firstValue","value","allValue","alert","bosDizzi","i","push","id","Math","ceil","random","GeneratorClick","pre","map","HadleClick","_objectSpread","ResetGame","card","handleClick","className","children","onClick"],"sources":["C:/Users/Karyos/Desktop/Tenzies-main/Tenzies-main/src/comp/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Navbar from './Navbar'\nimport './main.css'\nimport { nanoid } from 'nanoid'\nimport Card from './Card'\nimport { useEffect } from 'react'\n\n\nconst Main = () => {\nconst [ count,setCount] = useState(CardNumbers())\nconst [game,setGame]=useState(false)\n  \n\nuseEffect(()=>{\n\n const allTrue=  count.every((element)=>element.isTrue)\n const firstValue  = count[0].value\n\n const allValue = count.every((element)=>element.value===firstValue)\n\n\n\n if (allTrue && allValue) {\n  setGame(true)\n alert('You Won');\n }\n else{\n  setGame(false)\n }\n\n\n\n},[count])\n\n  function CardNumbers (){\n let bosDizzi =[]\n\n  for (let i = 0; i < 10; i++) {\n \n  bosDizzi.push({id : nanoid() , isTrue : false , value :  Math.ceil(Math.random()*6),})\n  \n\n    \n  }\nreturn bosDizzi\n  }\n\n const  GeneratorClick =()=>{\n\n  setCount(pre=>pre.map((element)=>{\n return  element.isTrue ?  element : {id : nanoid() , isTrue : false , value :  Math.ceil(Math.random()*6),}\n\n  }))\n\n }\n\n  const HadleClick = (id)=>{\n\n    setCount(pre=>pre.map((element)=>{\n    \n    return   element.id===id ? {...element,isTrue:!element.isTrue} : element\n    \n    }))\n    \n    }\n\n    const ResetGame= ()=>{\n\n      setCount(pre=>pre.map((element)=>{\n        return  {id : nanoid() , isTrue : false , value :  Math.ceil(Math.random()*6),}\n       \n         }))\n\n\n    }\n\n\nconst card =  count.map((element)=>{return(\n\n<Card \nvalue = {element.value}\nkey = { element.id}\nid = {element.id}\nisTrue ={ element.isTrue}\nhandleClick ={ ()=>HadleClick(element.id)}\n\n\n/>\n)})\n\n  return (\n    <div className='Main-div'>\n      <div className='ekran'>\n\n        <Navbar/>\n        <div className='Cards-div'>\n         {card}\n        </div>\n\n        <button   onClick={()=>game ? ResetGame() : GeneratorClick()}\n                  className='main-btn'>{game?'reset ':'roll'}</button>\n       </div>      \n\n    </div>\n  )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}